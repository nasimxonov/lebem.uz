generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id         String @id @default(uuid())
  first_name String
  last_name  String
  username   String @unique
  password   String

  createdAt DateTime @default(now())

  @@map("users")
}

model Products {
  id          String          @id @default(uuid())
  title       String
  price       Float
  description String
  categoryId  String
  category    Categories      @relation(fields: [categoryId], references: [id])
  images      ProductImages[]
  order       Int             @default(0)

  @@map("products")
}

model Contact {
  id        String   @id @default(uuid())
  fullname  String
  phone     String
  createdAt DateTime @default(now())

  @@map("contacts")
}

model ProductImages {
  id        String   @id @default(uuid())
  imageUrl  String
  productId String
  product   Products @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("product_images")
}

model Categories {
  id       String     @id @default(uuid())
  title    String
  image    String?
  products Products[]
  order    Int        @default(0)

  @@map("categories")
}

model BotUser {
  id          Int      @id @default(autoincrement())
  telegramId  String   @unique
  fullName    String?
  phoneNumber String?
  createdAt   DateTime @default(now())
}

model Message {
  id         Int                @id @default(autoincrement())
  text       String
  images     String[]
  recipients MessageRecipient[]
  createdAt  DateTime           @default(now())
}

model MessageRecipient {
  id        Int             @id @default(autoincrement())
  message   Message         @relation(fields: [messageId], references: [id], onDelete: Cascade)
  messageId Int
  userId    String
  status    RecipientStatus @default(PENDING)
  sentAt    DateTime?
}

enum RecipientStatus {
  PENDING
  SENT
  FAILED
}
